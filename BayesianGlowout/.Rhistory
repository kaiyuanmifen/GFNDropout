p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=40
p=0.5
OODReward=1
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
ggsave(plot = p,paste0('images/',DataNames,"_testacc.png"),scale=3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=40
p=0.5
OODReward=0
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
ggsave(plot = p,paste0('images/',DataNames,"_testacc.png"),scale=3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=40
p=0.2
OODReward=0
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
ggsave(plot = p,paste0('images/',DataNames,"_testacc.png"),scale=3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=80
p=0.2
OODReward=0
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
ggsave(plot = p,paste0('images/',DataNames,"_testacc.png"),scale=3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=80
p=0.2
OODReward=1
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
ggsave(plot = p,paste0('images/',DataNames,"_testacc.png"),scale=3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
library(ggplot2)
names(Data)
head(Data)
#Data=Data[Data$Method!="MLP_SVD",]
DataNames="MNIST"#CIFAR10 MNIST
N_units=80
p=0.5
OODReward=1
VecPlot1=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_GFNDB","MLP_GFNFM"))&(Data$N_units==N_units)&(Data$p==p)&(Data$OODReward==OODReward),]
VecPlot2=Data[(Data$Data==DataNames)&(Data$Method%in%c("MLP_dropout","MLP_Standout"))&(Data$N_units==N_units)&(Data$p==p),]
VecPlot3=Data[(Data$Data==DataNames)&(Data$Method%in%c( "MLP_nodropout","MLP_SVD"))&(Data$N_units==N_units),]
VecPlot=rbind(VecPlot1,VecPlot2,VecPlot3)
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc,color=Method)) +geom_line()+
ggtitle(DataNames)
p
head(VecPlot)
p <- ggplot(VecPlot, aes(x=Epoch, y=test_acc_OOD,color=Method)) +geom_line()+
ggtitle(DataNames)
p
setwd("C:/Users/kaiyu/Google Drive/research/MILA/GFlownets/Dropout/StageTwo_7")
setwd("C:/Users/kaiyu/Google Drive/research/MILA/GFlownets/Dropout/StageTwo_7/BayesianGlowout")
library(ggplot2)
Dir="logs/mnist-gfn_20220812073552/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
library(ggplot2)
Dir="logs/mnist-gfn_20220812073552/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
library(ggplot2)
Dir="logs/mnist-gfn_20220812074319/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
####analyse test output
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
ggsave(B,filename =paste0("images/","LogPFvsRmu",".png") )
B=ggplot(data=data, aes(x=LogPF, y=LogRmu)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
library(ggplot2)
Dir="logs/mnist-gfn_20220812074848/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
####analyse test output
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth(method="loess")+
ggtitle("LogPF vs LogRmu")
B
library(ggplot2)
Dir="logs/mnist-gfn_20220812075918/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
####analyse test output
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth(method="loess")+
ggtitle("LogPF vs LogRmu")
ggsave(B,filename =paste0("images/","LogPFvsRmu",".png") )
library(ggplot2)
Dir="logs/mnist-gfn_20220812082858/"
for (Name in c("train_acc","train_CEloss","train_GFNloss_mu","train_actual_dropout_rate","train_LogPB_mu","train_LogPF_mu","train_LogZ_mu","train_LogR_mu",
"valid_acc","valid_CEloss","valid_GFNloss_mu","valid_actual_dropout_rate","valid_LogPB_mu","valid_LogPF_mu","valid_LogZ_mu","valid_LogR_mu")){
Data=read.csv(paste0(Dir,Name,".csv"),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
ggsave(B,filename =paste0("images/",Name,".png") )
}
####analyse test output
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth(method="loess")+
ggtitle("LogPF vs LogRmu")
ggsave(B,filename =paste0("images/","LogPFvsRmu",".png") )
####analyse test output
data=read.csv("images/testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth(method="loess")+
ggtitle("LogPF vs LogRmu")
B
B=ggplot(data=data, aes(x=LogPF, y=LogRmu)) +
geom_point()+
geom_smooth()+
ggtitle("LogPF vs LogRmu")
B
setwd("C:/Users/kaiyu/Google Drive/research/MILA/GFlownets/Dropout/StageTwo_8/BayesianGlowout")
Dir="logs/mnist-gfn_20220812135352/"
AllExp=list.files(Dir)
AllExp
AllExp=AllExp[grepl(AllExp,pattern = ".csv")]
AllExp
name=AllExp[2]
name
Data=read.csv(paste0(Dir,Name),header = F)
Name=AllExp[2]
Name
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
library(ggplot2)
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(Name)
#}
B
strsplit(Name,"[.]")[1]
plotname=strsplit(Name,"[.]")[[1]][1]
plotname
for (Name in AllExp){
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
plotname=strsplit(Name,"[.]")[[1]][1]
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(plotname)
#}
ggsave(B,filename =paste0("images/",plotname,".png") )
}
Dir="logs/mnist-gfn_20220812135352/"
AllExp=list.files(Dir)
AllExp=AllExp[grepl(AllExp,pattern = ".csv")]
for (Name in AllExp){
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
plotname=strsplit(Name,"[.]")[[1]][1]
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(plotname)
#}
ggsave(B,filename =paste0("images/",plotname,".png") )
}
Dir="logs/mnist-gfn_20220812135352/"
AllExp=list.files(Dir)
AllExp=AllExp[grepl(AllExp,pattern = ".csv")]
for (Name in AllExp){
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
plotname=strsplit(Name,"[.]")[[1]][1]
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(plotname)
#}
ggsave(B,filename =paste0("images/",plotname,".png") )
}
Dir="logs/mnist-gfn_20220812135352/"
AllExp=list.files(Dir)
AllExp=AllExp[grepl(AllExp,pattern = ".csv")]
for (Name in AllExp){
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
plotname=strsplit(Name,"[.]")[[1]][1]
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(plotname)
#}
ggsave(B,filename =paste0("images/",plotname,".png"),width = 5,height = 5 )
}
Dir="logs/mnist-gfn_20220812140318/"
AllExp=list.files(Dir)
AllExp=AllExp[grepl(AllExp,pattern = ".csv")]
for (Name in AllExp){
Data=read.csv(paste0(Dir,Name),header = F)
Data=Data[,c(2,3)]
names(Data)=c("step","value")
#
# if (grepl(Name,pattern = "loss")){
#   B=ggplot(data=Data, aes(x=step, y=log(value), )) +
#     geom_path()+
#     geom_point()+
#     geom_smooth()+
#     ggtitle(Name)
# } else{
plotname=strsplit(Name,"[.]")[[1]][1]
B=ggplot(data=Data, aes(x=step, y=value, )) +
geom_path()+
geom_point()+
geom_smooth()+
ggtitle(plotname)
#}
ggsave(B,filename =paste0("images/",plotname,".png"),width = 5,height = 5 )
}
data=read.csv("images/testmasked_testResults.csv")
head(data)
names(data)[1]="Index"
B=ggplot(data=data, aes(x=LogRmu, y=LogPF)) +
geom_point()+
geom_smooth(method="glm")+
ggtitle("LogPF vs LogRmu")
B
ggsave(B,filename =paste0("images/","maskedLogPFvsRmu",".png") )
ggsave(B,filename =paste0("images/","maskedLogPFvsRmu",".png"),width = 5,height = 5  )
